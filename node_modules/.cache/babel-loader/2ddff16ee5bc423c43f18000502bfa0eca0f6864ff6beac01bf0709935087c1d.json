{"ast":null,"code":"var _jsxFileName = \"/Users/mukki/Desktop/exam/src/containers/Readme.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MarkdownRenderer = () => {\n  _s();\n  const [markdown, setMarkdown] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    fetch(\"../../readme.md\").then(response => response.text()).then(text => setMarkdown(text)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `fixed border-none  top-3 right-3 z-10 py-2 px-4 font-semibold duration-300 transition-colors border rounded-xl\n        ${modal ? \"bg-blue-500 text-white\" : \"bg-white text-black\"}\n        `,\n      onClick: () => setModal(!modal),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \"Read Me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed z-50 container mx-auto left-0 right-0 top-20 bottom-20 overflow-auto py-10 bg-white rounded-md shadow transform-gpu transition-all duration-300 origin-top-right ${modal ? \"translate-x-0 translate-y-0 opacity-100 pointer-events-auto scale-100\" : \"scale-75 translate-x-16 -translate-y-10 opacity-0 pointer-events-none\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setModal(false),\n        className: \"absolute right-0 top-0 mt-3 mr-3\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          strokeWidth: \"1.5\",\n          stroke: \"currentColor\",\n          className: \"w-8 h-8\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-renderer prose w-full mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: markdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MarkdownRenderer, \"w0xYz4kKnrfG+47o/irW6fnYeEg=\");\n_c = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c;\n$RefreshReg$(_c, \"MarkdownRenderer\");","map":{"version":3,"names":["React","useState","useEffect","ReactMarkdown","MarkdownRenderer","markdown","setMarkdown","modal","setModal","fetch","then","response","text","catch","error","console"],"sources":["/Users/mukki/Desktop/exam/src/containers/Readme.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst MarkdownRenderer: React.FC = () => {\r\n  const [markdown, setMarkdown] = useState<string>(\"\");\r\n  const [modal, setModal] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"../../readme.md\")\r\n      .then((response) => response.text())\r\n      .then((text) => setMarkdown(text))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={`fixed border-none  top-3 right-3 z-10 py-2 px-4 font-semibold duration-300 transition-colors border rounded-xl\r\n        ${modal ? \"bg-blue-500 text-white\" : \"bg-white text-black\"}\r\n        `}\r\n        onClick={() => setModal(!modal)}\r\n      >\r\n        <span className=\"bg-blue\" />\r\n        Read Me\r\n      </button>\r\n      <div\r\n        className={`fixed z-50 container mx-auto left-0 right-0 top-20 bottom-20 overflow-auto py-10 bg-white rounded-md shadow transform-gpu transition-all duration-300 origin-top-right ${\r\n          modal\r\n            ? \"translate-x-0 translate-y-0 opacity-100 pointer-events-auto scale-100\"\r\n            : \"scale-75 translate-x-16 -translate-y-10 opacity-0 pointer-events-none\"\r\n        }`}\r\n      >\r\n        <span\r\n          onClick={() => setModal(false)}\r\n          className=\"absolute right-0 top-0 mt-3 mr-3\"\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-8 h-8\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M6 18L18 6M6 6l12 12\"\r\n            />\r\n          </svg>\r\n        </span>\r\n        <div className=\"markdown-renderer prose w-full mx-auto\">\r\n          <ReactMarkdown>{markdown}</ReactMarkdown>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MarkdownRenderer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,gBAAgB;AAAC;AAAA;AAE3C,MAAMC,gBAA0B,GAAG,MAAM;EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAU,KAAK,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,iBAAiB,CAAC,CACrBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKN,WAAW,CAACM,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MACE,SAAS,EAAG;AACpB,UAAUP,KAAK,GAAG,wBAAwB,GAAG,qBAAsB;AACnE,SAAU;MACF,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAACD,KAAK,CAAE;MAAA,wBAEhC;QAAM,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,WAE9B;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MACE,SAAS,EAAG,0KACVA,KAAK,GACD,uEAAuE,GACvE,uEACL,EAAE;MAAA,wBAEH;QACE,OAAO,EAAE,MAAMC,QAAQ,CAAC,KAAK,CAAE;QAC/B,SAAS,EAAC,kCAAkC;QAAA,uBAE5C;UACE,KAAK,EAAC,4BAA4B;UAClC,IAAI,EAAC,MAAM;UACX,OAAO,EAAC,WAAW;UACnB,WAAW,EAAC,KAAK;UACjB,MAAM,EAAC,cAAc;UACrB,SAAS,EAAC,SAAS;UAAA,uBAEnB;YACE,aAAa,EAAC,OAAO;YACrB,cAAc,EAAC,OAAO;YACtB,CAAC,EAAC;UAAsB;YAAA;YAAA;YAAA;UAAA;QACxB;UAAA;UAAA;UAAA;QAAA;MACE;QAAA;QAAA;QAAA;MAAA,QACD,eACP;QAAK,SAAS,EAAC,wCAAwC;QAAA,uBACrD,QAAC,aAAa;UAAA,UAAEH;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAiB;QAAA;QAAA;QAAA;MAAA,QACrC;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACL;AAEP,CAAC;AAAC,GAtDID,gBAA0B;AAAA,KAA1BA,gBAA0B;AAwDhC,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}